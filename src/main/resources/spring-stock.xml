<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="   
         http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
   		 http://www.springframework.org/schema/context 
   		 http://www.springframework.org/schema/context/spring-context-3.1.xsd   
   		 http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
         http://www.springframework.org/schema/mvc 
         http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
         http://www.springframework.org/schema/cache 
         http://www.springframework.org/schema/cache/spring-cache.xsd" >

	<context:annotation-config/>

	<context:component-scan base-package="com.bohan.admin" />  

	
	<!-- 数据源，采用C3p0连接池 -->
	<bean id="hxDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="${stockpool.jdbc.url}"/>
		<!-- 用户名。Default: null -->
		<property name="user" value="${stockpool.jdbc.user}" />
		<!-- 密码。Default: null -->
		<property name="password" value="${stockpool.jdbc.password}" />
		<!-- 初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="3" />
		<!-- 连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="15"/>
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3"/>
		<!-- 每30秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="30"/>
		<!-- c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么 属性preferredTestQuery将被忽略。
			  你不能在这张Test表上进行任何操作，它将只供c3p0测试 使用。Default: null -->
		<property name="automaticTestTable" value="c3p0_test_table"/>
		<!-- 定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意： 测试的表必须在初始数据源的时候就存在。Default: null -->
		<property name="preferredTestQuery" value="select * from c3p0_test_table limit 1"/>
		<!-- 定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30"/>
		<!-- 两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="1000"/>
		<!-- 连接关闭时默认将所有未提交的操作回滚。Default: false -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。
			  如果设为true，那么在尝试 获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure" value="false"/>
		<!-- 当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出 SQLException,如设为0则无限期等待。单位毫秒。Default: 0 -->
		<property name="checkoutTimeout" value="10000"/>
		<!-- 通过实现ConnectionTester或QueryConnectionTester的类来测试连接。类名需制定全路径。 
			  Default: com.mchange.v2.c3p0.impl.DefaultConnectionTester -->
		<property name="connectionTesterClassName" value="com.mchange.v2.c3p0.impl.DefaultConnectionTester"/>
		<!-- 指定c3p0 libraries的路径，如果（通常都是这样）在本地即可获得那么无需设置，默认null即可 Default: null -->
		<property name="factoryClassLocation" value="null"/>
		<!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="90"/>
		<!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			  如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements" value="0"/>
		<!-- maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
		<property name="maxStatementsPerConnection" value="0"/>
		<!-- c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能 通过多线程实现多个操作同时被执行。Default: 3 -->
		<property name="numHelperThreads" value="5"/>
		<!-- 用户修改系统配置参数执行前最多等待300秒。Default: 300 -->
		<property name="propertyCycle" value="300"/>
	</bean>
	
	<!-- mybaits 数据工厂 -->
	<bean id="hxSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="hxDataSource" />
		<property name="configLocation" value="classpath:mybatis.xml"/>
		<property name="mapperLocations" value="classpath*:com/bohan/admin/mapper/*Mapper.xml" />
	</bean>
	
	<!-- 数据库事物 -->
	<bean id="hxTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="hxDataSource" />  
	</bean>
	<tx:annotation-driven transaction-manager="hxTransactionManager" proxy-target-class="true"/> 
		
	<!-- 自动扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bohan.admin.dao" />
		<property name="sqlSessionFactory" ref="hxSessionFactory" />
	</bean>
	
</beans>  